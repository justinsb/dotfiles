#!/bin/bash

set -e
set -x

cp bash_aliases ~/.bash_aliases
cp bashrc ~/.bashrc
cp profile ~/.profile
cp gitconfig ~/.gitconfig

mkdir -p ~/bin/
export PATH=~/bin:$PATH

# GH CLI
VERSION=2.24.3
if [[ ! -d "${HOME}/apps/gh/${VERSION}" ]]; then
  wget https://github.com/cli/cli/releases/download/v${VERSION}/gh_${VERSION}_linux_amd64.tar.gz -O gh.tar.gz
  rm -f ~/apps/gh/latest
  rm -rf ~/apps/gh/${VERSION}
  mkdir -p ~/apps/gh/${VERSION}
  tar -C ~/apps/gh/${VERSION} -x -v --strip-components=1 -f gh.tar.gz
  ln -sf  ~/apps/gh/${VERSION}/ ~/apps/gh/latest
  ln -sf ~/apps/gh/latest/bin/gh ~/bin/gh
  rm gh.tar.gz
fi

# Go
VERSION=1.22.1
if [[ ! -d "${HOME}/apps/go/${VERSION}" ]]; then
  wget https://go.dev/dl/go${VERSION}.linux-amd64.tar.gz -O go.tar.gz
  rm -rf ~/apps/go/latest
  rm -rf ~/apps/go/${VERSION}
  mkdir -p ~/apps/go/${VERSION}
  tar -C ~/apps/go/${VERSION} -x -v -f go.tar.gz
  ln -sf  ~/apps/go/${VERSION}/ ~/apps/go/latest
  ln -sf ~/apps/go/latest/go/bin/go ~/bin/go
  ln -sf ~/apps/go/latest/go/bin/gofmt ~/bin/gofmt
  rm go.tar.gz
fi

# kustomize
VERSION=5.2.1
if [[ ! -d "${HOME}/apps/kustomize/${VERSION}" ]]; then
  rm -rf ~/apps/kustomize/latest
  rm -rf ~/apps/kustomize/${VERSION}
  mkdir -p ~/apps/kustomize/${VERSION}
  pushd ~/apps/kustomize/${VERSION}
  GOBIN=~/apps/kustomize/${VERSION}/ go install sigs.k8s.io/kustomize/kustomize/v5@v${VERSION}
  popd
  ln -sf  ~/apps/kustomize/${VERSION}/ ~/apps/kustomize/latest
  ln -sf ~/apps/kustomize/latest/kustomize ~/bin/kustomize
fi

# Terraform
VERSION=1.5.6
if [[ ! -d "${HOME}/apps/terraform/${VERSION}" ]]; then
  rm -rf ~/apps/terraform/latest
  rm -rf ~/apps/terraform/${VERSION}
  mkdir -p ~/apps/terraform/${VERSION}
  pushd ~/apps/terraform/${VERSION}
  wget https://releases.hashicorp.com/terraform/${VERSION}/terraform_${VERSION}_linux_amd64.zip -O terraform.zip
  unzip terraform.zip
  rm terraform.zip
  popd
  ln -sf  ~/apps/terraform/${VERSION}/ ~/apps/terraform/latest
  ln -sf ~/apps/terraform/latest/terraform ~/bin/terraform
fi

# Helm
VERSION=3.11.2
if [[ ! -d "${HOME}/apps/helm/${VERSION}" ]]; then
  wget https://get.helm.sh/helm-v${VERSION}-linux-amd64.tar.gz -O helm.tar.gz
  rm -rf ~/apps/helm/latest
  rm -rf ~/apps/helm/${VERSION}
  mkdir -p ~/apps/helm/${VERSION}
  tar -C ~/apps/helm/${VERSION} -x -v --strip-components=1 -f helm.tar.gz
  ln -sf  ~/apps/helm/${VERSION}/ ~/apps/helm/latest
  ln -sf ~/apps/helm/latest/helm ~/bin/helm
  rm helm.tar.gz
fi

# crane / gcrane
VERSION=0.16.1
if [[ ! -d "${HOME}/apps/crane/${VERSION}" ]]; then
  rm -rf ~/apps/crane/latest
  rm -rf ~/apps/crane/${VERSION}
  mkdir -p ~/apps/crane/${VERSION}
  pushd ~/apps/crane/${VERSION}
  GOBIN=~/apps/crane/${VERSION}/ go install github.com/google/go-containerregistry/cmd/crane@v${VERSION}
  GOBIN=~/apps/crane/${VERSION}/ go install github.com/google/go-containerregistry/cmd/gcrane@v${VERSION}
  popd
  ln -sf  ~/apps/crane/${VERSION}/ ~/apps/crane/latest
  ln -sf ~/apps/crane/latest/crane ~/bin/crane
  ln -sf ~/apps/crane/latest/gcrane ~/bin/gcrane
fi

# kind
VERSION=0.20.0
if [[ ! -d "${HOME}/apps/kind/${VERSION}" ]]; then
  rm -rf ~/apps/kind/latest
  rm -rf ~/apps/kind/${VERSION}
  mkdir -p ~/apps/kind/${VERSION}
  pushd ~/apps/kind/${VERSION}
  GOBIN=~/apps/kind/${VERSION}/ go install sigs.k8s.io/kind/cmd/kind@v${VERSION}
  popd
  ln -sf  ~/apps/kind/${VERSION}/ ~/apps/kind/latest
  ln -sf ~/apps/kind/latest/kind ~/bin/kind
fi

# kOps
kops_versions=( "1.26.2" )
for VERSION in "${kops_versions[@]}"; do
  if [[ ! -d "${HOME}/apps/kops/${VERSION}" ]]; then
    #rm -rf ~/apps/kops/latest
    rm -rf ~/apps/kops/${VERSION}
    mkdir -p ~/apps/kops/${VERSION}
    wget https://github.com/kubernetes/kops/releases/download/v${VERSION}/kops-linux-amd64 -O ~/apps/kops/${VERSION}/kops
    chmod +x ~/apps/kops/${VERSION}/kops
    #ln -sf  ~/apps/kops/${VERSION}/ ~/apps/kops/latest
    ln -sf ~/apps/kops/${VERSION}/kops ~/bin/kops-${VERSION}
  fi
done

# kubectl
VERSION=1.28.2
if [[ ! -d "${HOME}/apps/kubectl/${VERSION}" ]]; then
  rm -rf ~/apps/kubectl/latest
  rm -rf ~/apps/kubectl/${VERSION}
  mkdir -p ~/apps/kubectl/${VERSION}
  wget https://dl.k8s.io/release/v${VERSION}/bin/linux/amd64/kubectl -O ~/apps/kubectl/${VERSION}/kubectl
  chmod +x ~/apps/kubectl/${VERSION}/kubectl
  ln -sf  ~/apps/kubectl/${VERSION}/ ~/apps/kubectl/latest
  ln -sf ~/apps/kubectl/latest/kubectl ~/bin/kubectl
fi

# stern
VERSION=1.26.0
if [[ ! -d "${HOME}/apps/stern/${VERSION}" ]]; then
  rm -rf ~/apps/stern/latest
  rm -rf ~/apps/stern/${VERSION}
  mkdir -p ~/apps/stern/${VERSION}
  pushd ~/apps/stern/${VERSION}
  GOBIN=~/apps/stern/${VERSION}/ go install github.com/stern/stern@v${VERSION}
  popd
  ln -sf  ~/apps/stern/${VERSION}/ ~/apps/stern/latest
  ln -sf ~/apps/stern/latest/stern ~/bin/stern
fi

# Only on stock debian
if grep 'BUG_REPORT_URL.*debian' /etc/os-release; then
  mkdir -p ~/.config/systemd/user
  cp systemd/*.service ~/.config/systemd/user/

  systemctl --user enable ssh-agent
  systemctl --user start ssh-agent
fi

./install-srctool
